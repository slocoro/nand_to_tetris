// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16], inc, load, reset;
    OUT out[16];
    
    PARTS:
    Inc16(in=feedback, out=incout);

    Mux16(a=feedback, b=incout, sel=inc, out=m1);   // takes incremented output and non-incremented output and selects one based on inc control bit
    Mux16(a=m1, b=in, sel=load, out=m2);            // takes output of previous mux and input and selects one based on load bit
    Mux16(a=m2, b=false, sel=reset, out=m3);        // takes output of previous mux and 0 (i.e. false) and selects one based on reset bit

    Register(in=m3, load=true, out=feedback, out=out);  // register takes value of last mux output and 1 (i.e. true, always loads it) and forks the output to out AND to the incrementer
                                                        // it always loads because the correct value of the counter is determined by the previous sequence of mux gates
}
